---
# default to php5 when this var is not set
- set_fact:
    php__version_7: false
  when: php__version_7 is undefined

- debug: var=php__version_7

- name: Register installed PHP major version
  shell: "php --version | grep -i cli | perl -pe 's|^PHP ([0-9]+)[.].*$|$1|i'"
  ignore_errors: true
  register: php_major_version

- debug: msg={{ php_major_version }}

- set_fact:
    php_upgrade: '{{ php_major_version.stdout == "5" and php__version_7 == true }}'

- set_fact:
    php_downgrade: '{{ php_major_version.stdout == "7" and php__version_7 == false }}'

- debug: msg='{{ "Upgrading" if php_upgrade else "Downgrading" if php_downgrade else "No change in" }} PHP major version'

# remove php7 as necessary before we install php5
- include: php7-uninstall.yml
  when: php_downgrade
  become: true

# remove php5 as necessary before we install php7
- include: php5-uninstall.yml
  when: php_upgrade
  become: true

- include: php5-install.yml
  when: php__version_7 == false
  become: true

- include: php7-install.yml
  when: php__version_7 == true
  become: true

- name: Register php_conf_path for subsequent roles
  set_fact:
    php_conf_path: "{{ php7_conf_path if php__version_7 == true else php5_conf_path }}"

- debug: var=php_conf_path

- name: Register php_mods_path for subsequent roles
  set_fact:
    php_mods_path: "{{ php7_mods_path if php__version_7 == true else php5_mods_path }}"

- debug: var=php_mods_path
