---
- name: Domain
  debug:
    var: domain

- name: Stage
  debug:
    var: stage

- name: New Hostname
  debug:
    var: new_hostname

- name: Determine static or dynamic resolv.conf
  shell: cat /etc/resolv.conf | grep "DO NOT EDIT THIS FILE BY HAND"
  ignore_errors: yes
  register: dynamic_resolv

- name: Update nameservers in resolv.conf
  replace:
    dest: /etc/resolv.conf
    regexp: '(nameserver [\w\d.:]+\n?)+'
    replace: 'nameserver 8.8.8.8\nnameserver 8.8.4.4\n\1'
  become: true

- name: Update nameservers in dhclient.conf
  lineinfile:
    dest: /etc/dhcp/dhclient.conf
    regexp: '^#?prepend domain-name-servers '
    line: 'prepend domain-name-servers 8.8.8.8, 8.8.4.4;'
  become: true
  when: dynamic_resolv.stdout != ""

# see evolution/wordpress#126
- name: Fetch kernel purging script (from control)
  local_action:
    module: get_url
    dest: /tmp/purge-kernels.py
    url: https://raw.githubusercontent.com/EvanK/ubuntu-purge-kernels/master/purge-kernels.py
    force: yes

- name: Copy purging script to remote
  copy:
    src: /tmp/purge-kernels.py
    dest: /tmp/purge-kernels.py
    force: yes
    mode: '0755'
  become: true

- name: Purge kernels as necessary
  command: /tmp/purge-kernels.py
  register: purgekernels_result
  ignore_errors: yes
  become: true
  when: not lookup('env','CI')

- name: Remove kernel purging script in tmp (from control)
  local_action:
    module: file
    dest: /tmp/purge-kernels.py
    state: absent

- name: Show purged kernels
  debug:
    var: purgekernels_result

- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: "{{ 60 * 60 * 24 }}"
  become: true

- name: Autoremove unused packages
  shell: DEBIAN_FRONTEND=noninteractive apt-get -y autoremove
  become: true

- name: Install common packages
  apt:
    pkg: "{{ item }}"
    state: present
  with_items: "{{ common_packages }}"
  become: true

- name: Update `hostname`
  hostname:
    name: "{{ new_hostname }}"
  become: true
  when: old_hostname != new_hostname

- name: Update /etc/hosts
  replace:
    dest: /etc/hosts
    backup: yes
    regexp: '{{ old_hostname | replace(".", "[.]") }}'
    replace: '{{ new_hostname }}'
  become: true
  when: old_hostname != new_hostname

- name: Configure logrotate for evolution logs
  copy:
    src: logrotate
    dest: /etc/logrotate.d/evolution
    mode: '0644'
  become: true

- name: Test for git protocol (git://) connectivity
  command: curl -v -m 10 http://github.com:9418/
  register: git_protocol_test
  ignore_errors: true

- name: Bypass git protocol if necessary
  command: git config --global url."https://".insteadOf git://
  when: "'connect() timed out' in git_protocol_test.stderr"

- include: swap.yml
  when: ansible_swaptotal_mb == 0
