#!/usr/bin/env node

var fs      = require('fs-extra');
var exec    = require('child_process').exec;
var helpers = require('yeoman-generator').test;
var path    = require('path');

var outputDir     = path.join(__dirname, '..', 'temp');
var privatePath   = path.join(outputDir, '/lib/ansible/files/ssh/id_rsa');
var privateKey    = fs.existsSync(privatePath) ? fs.readFileSync(privatePath) : null;
var publicPath    = path.join(outputDir, '/lib/ansible/files/ssh/id_rsa.pub');
var publicKey     = fs.existsSync(publicPath) ? fs.readFileSync(publicPath) : null;
var certPath      = path.join(outputDir, '/lib/ansible/files/ssl/example.com.pem');
var cert          = fs.existsSync(certPath) ? fs.readFileSync(certPath) : null;

var WordpressGenerator = require('../lib/yeoman');

helpers.testDirectory(outputDir, function(err) {
  if (err) {
    throw err;
  }

  console.log('Mocking in `%s`', outputDir);
  var isCI = (process.env.CI || process.env.TRAVIS);

  if (isCI) {
    var prep = [
      'git init ' + outputDir,
    ];
  }
  else {
    var prep = [
      'git clone git@github.com:evolution/wordpress-example.git ' + outputDir,
      'cd ' + outputDir,
      'git rm -rf .',
    ];
  }

  console.log('Executing `%s`', prep.join(' && '));
  exec(prep.join(' && '), function(err, stdout, stderr) {
    if (err) {
      throw err;
    }

    var app = helpers.createGenerator('evolution-wordpress:app', [
      [WordpressGenerator, 'evolution-wordpress:app']
    ]);

    app.options['skip-install'] = true;
    app.options['dev'] = !isCI;

    helpers.mockPrompt(app, {
      private:      false,
      ssl:          true,
      name:         'Example.com',
      domain:       'example.com',
      www:          false,
      roles:        WordpressGenerator.roles.map(function(role) { return role.value; }),
      ip:           '192.168.137.137',
      DB_NAME:      'example_db',
      DB_USER:      'example_user',
      DB_PASSWORD:  'example',
      DB_HOST:      '127.0.0.1',
      prefix:       'wp_',
    });

    app.run(function() {
      if (privateKey) {
        fs.writeFileSync(privatePath, privateKey);
      }

      if (publicKey) {
        fs.writeFileSync(publicPath, publicKey);
      }

      if (cert) {
        fs.writeFileSync(certPath, cert);
      }

      fs.appendFileSync(outputDir + '/lib/ansible/group_vars/all', [
        '',
        'ansistrano_git_repo: ' + (
          isCI
          ? '"file:///vagrant/.git"'
          : '"https://github.com/evolution/wordpress-example.git"'
        ),
        '',
      ].join('\n'));

      var vagrantFile = fs.readFileSync(outputDir + '/Vagrantfile', 'utf8')
        .replace(
          new RegExp('(# Static IP)'),
          [
            '# Additional host names for testing',
            '    box.hostmanager.aliases = ["example.com", "production.example.com", "www.example.com"]',
            '',
            '    $1',
          ].join('\n')
        )
        .replace(
          new RegExp('(# Remount)'),
          [
            '# Mount library for testing',
            '    box.vm.synced_folder "../", "/wordpress", :nfs => true',
            '',
            '    $1',
          ].join('\n')
        )
      ;

      fs.writeFileSync(outputDir + '/Vagrantfile', vagrantFile);

      var wrap = [
        'git add .',
      ];

      if (isCI) {
        Array.prototype.push.apply(wrap, [
          'git commit -m "Something to deploy"',
          'git remote add origin ' + outputDir + '/.git',
        ]);
      }

      console.log('Executing `%s`', wrap.join(' && '));
      exec(wrap.join(' && '), { cwd: outputDir });
    });
  });
});
